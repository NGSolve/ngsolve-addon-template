name: Build and upload to PyPI

on:
  push:
    branches:
      - master
      - test
    tags:
      - '*'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13]
        include:
          - os: windows-2019
            cibw-arch: AMD64
            cmake-generator: "Visual Studio 16 2019"
            cmake_generator_platform: "x64"

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{  github.ref_name }}
          fetch-tags: 'true'
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.0

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{  github.ref_name }}
          fetch-tags: 'true'
          fetch-depth: 0

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    if: false # remove this if you want to enable upload to pypi (you need to setup that on pypi first)
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    #if: github.event_name == 'release' && github.event.action == 'published'
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          password: ${{ secrets.PYPI_API_TOKEN_2 }}
          # To test: repository-url: https://test.pypi.org/legacy/
